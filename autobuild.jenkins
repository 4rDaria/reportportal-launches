#!groovy
properties([disableConcurrentBuilds()])

pipeline {
    agent any

    tools {
        maven 'M3'
    }

    environment {
        SCANNER_HOME = tool name: 'SonarQube Scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
    }

    stages {
        stage("Prepare") {
            steps {
                git branch: 'module_9', url: 'https://github.com/4rDaria/reportportal-launches'
            }
        }

        stage("Build") {
            steps {
                checkout scm
                withMaven(maven: 'M3') {
                    bat 'mvn -Dmaven.test.failure.ignore=true install'
                }
                post {
                    success {
                        junit 'target/surefire-reports/**/*.xml'
                    }
                }
            }
        }

        stage("Run tests") {
            steps {
                withMaven(maven: 'M3') {
                    bat 'mvn test'
                }
            }
        }

        stage("SonarCloud Analysis") {
            steps {
                withSonarQubeEnv('SonarCloud') { // Use the SonarQube environment configured in Jenkins
                    script {
                        def scannerHome = SCANNER_HOME
                        sh "${scannerHome}/bin/sonar-scanner " +
                                "-Dsonar.projectKey=your_project_key " +
                                "-Dsonar.organization=your_organization " +
                                "-Dsonar.host.url=https://sonarcloud.io " +
                                "-Dsonar.login=${env.SONAR_TOKEN}"
                    }
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'build/libs/**/*.jar', fingerprint: true
            junit 'build/reports/**/*.xml'
        }
    }
}